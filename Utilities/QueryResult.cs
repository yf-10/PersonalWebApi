using System.Collections;

namespace PersonalWebApi.Utilities;
/// --------------------------------------------------------------------------------
/// <summary>
/// クエリ結果の各行（列名と値の辞書）のコレクションを表すクラス
/// </summary>
/// --------------------------------------------------------------------------------
public class QueryResult : IEnumerable<Dictionary<string, object?>> {
    private readonly List<Dictionary<string, object?>> _rows = [];

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// 空のQueryResultを初期化する
    /// </summary>
    /// --------------------------------------------------------------------------------
    public QueryResult() { }

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// 指定した行データでQueryResultを初期化する
    /// </summary>
    /// <param name="rows">初期行データのセット</param>
    /// --------------------------------------------------------------------------------
    public QueryResult(IEnumerable<Dictionary<string, object?>> rows) {
        _rows.AddRange(rows);
    }

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// 結果セットに行を追加する
    /// </summary>
    /// <param name="row">追加する行データ</param>
    /// --------------------------------------------------------------------------------
    public void Add(Dictionary<string, object?> row) => _rows.Add(row);

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// 結果セット内の行数を取得する
    /// </summary>
    /// --------------------------------------------------------------------------------
    public int Count => _rows.Count;

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// 指定したインデックスの行データを取得する
    /// </summary>
    /// <param name="index">取得する行の0始まりのインデックス</param>
    /// --------------------------------------------------------------------------------
    public Dictionary<string, object?> this[int index] => _rows[index];

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// コレクションを反復処理する列挙子を返す
    /// </summary>
    /// --------------------------------------------------------------------------------
    public IEnumerator<Dictionary<string, object?>> GetEnumerator() => _rows.GetEnumerator();

    /// --------------------------------------------------------------------------------
    /// <summary>
    /// コレクションを反復処理する列挙子（非ジェネリック）を返す
    /// </summary>
    /// --------------------------------------------------------------------------------
    IEnumerator IEnumerable.GetEnumerator() => _rows.GetEnumerator();

}